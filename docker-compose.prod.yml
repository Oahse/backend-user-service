version: '3.9'

services:
  kafka:
    image: bitnami/kafka:3.8.0
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    restart: unless-stopped
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 30s

  users-db:
    image: postgres:16-alpine
    container_name: users-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    volumes:
      - users-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "users_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  userservice:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: userservice
    depends_on:
      kafka:
        condition: service_healthy
      users-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - webnet
    env_file:
      - .env
    restart: unless-stopped

networks:
  webnet:
    driver: bridge

volumes:
  users-db-data:
