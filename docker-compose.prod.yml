services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - webnet
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.2'        # 20% of one CPU core
          memory: 200M       # max 200 MB RAM
        reservations:
          cpus: '0.1'        # reserve 10%
          memory: 100M


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    # command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    container_name: backend
    depends_on:
      redis:
        condition: service_healthy

    ports:
      - "8000:8000"
    networks:
      - webnet
    volumes:
      - ./backend:/usr/src/app  # live code changes
      - /usr/src/app/__pycache__  # exclude pycache from volume mount
    env_file:
      - .env.local
    working_dir: /usr/src/app
    restart: unless-stopped
    environment:
      - POSTGRES_SERVER=banwee-db.c2po20oyum9p.us-east-1.rds.amazonaws.com
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
        reservations:
          cpus: '0.15'
          memory: 150M

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.celery
    container_name: celery_worker
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/usr/src/app  # live code changes
      - /usr/src/app/__pycache__  # exclude pycache from volume mount
    env_file:
      - .env.local
    working_dir: /usr/src/app
    restart: unless-stopped
    networks:
      - webnet
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 200M
        reservations:
          cpus: '0.1'
          memory: 100M

networks:
  webnet:
    driver: bridge

volumes:
  redis-data:
