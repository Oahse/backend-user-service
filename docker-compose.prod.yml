services:
  users-db:
    image: postgres:15-alpine
    container_name: users-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "users_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
        reservations:
          cpus: '0.15'
          memory: 150M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend
    depends_on:
      users-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - webnet
    env_file:
      - .env.production
    working_dir: /usr/src/app
    restart: unless-stopped
    environment:
      - POSTGRES_SERVER=users-db
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
        reservations:
          cpus: '0.15'
          memory: 150M

networks:
  webnet:
    driver: bridge

volumes:
  postgres-db-data:
