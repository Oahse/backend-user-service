version: "3.9"

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - webnet
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 30s

  users-db:
    image: postgres:16-alpine
    container_name: users-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    volumes:
      - users-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"  # optional in dev
    networks:
      - webnet
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "users_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  userservice:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    container_name: userservice
    depends_on:
      redis:
        condition: service_healthy
      users-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - webnet
    volumes:
      - .:/usr/src/app  # live code changes
    env_file:
      - .env
    working_dir: /usr/src/app
    restart: unless-stopped

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_worker
    command: celery -A tasks worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
      users-db:
        condition: service_healthy
    volumes:
      - .:/usr/src/app  # live code changes
    env_file:
      - .env
    working_dir: /usr/src/app
    restart: unless-stopped

  flower:
    image: mher/flower
    container_name: flower
    restart: unless-stopped
    ports:
      - "5555:5555"
    command: flower --broker=${CELERY_BROKER_URL}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - webnet

  # Optional nginx in dev, usually unnecessary unless you want to test routing
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - userservice
  #   restart: unless-stopped
  #   networks:
  #     - webnet

networks:
  webnet:
    driver: bridge

volumes:
  users-db-data:
  redis-data:
