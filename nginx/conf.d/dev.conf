# nginx Development Configuration
# This configuration is optimized for development environment
# - No SSL/HTTPS requirements
# - Direct HTTP access
# - Simplified routing for debugging

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Upstream services
    upstream backend {
        server userservice:8000;
    }
    
    upstream frontend {
        server frontend:5173;
    }
    
    # Rate limiting zones (relaxed for development)
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;
    
    server {
        listen 80;
        server_name localhost;
        
        # Basic security headers (minimal for development)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Frontend - proxy to Vite dev server
        location / {
            limit_req zone=general burst=50 nodelay;
            proxy_pass http://frontend;
            
            # Include proxy parameters
            include /etc/nginx/snippets/proxy-params.conf;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # API endpoints
        location /api/v1/ {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://backend/api/v1/;
            
            # Include proxy parameters
            include /etc/nginx/snippets/proxy-params.conf;
            
            # CORS headers for development
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:5173";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Flower monitoring (Celery)
        location /flower/ {
            proxy_pass http://flower:5555/;
            include /etc/nginx/snippets/proxy-params.conf;
        }
        
        # Static files and assets (if needed)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            include /etc/nginx/snippets/proxy-params.conf;
            
            # Short cache for development
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
}