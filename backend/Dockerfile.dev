# Pull official Python image
FROM python:3.12-slim

# Environment setup
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/usr/src/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /usr/src/app

# Install OS packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    netcat-openbsd \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Download wait-for-it.sh
RUN curl -sSL https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh \
    -o /usr/local/bin/wait-for-it.sh && chmod +x /usr/local/bin/wait-for-it.sh

# App user
RUN groupadd -r appgroup && useradd -r -g appgroup appuser

# Python dependencies
COPY requirements*.txt ./
RUN pip install --upgrade pip && pip install -r requirements.txt

# Copy scripts and app
COPY run_migrations.sh ./run_migrations.sh
COPY . .
RUN chmod +x run_migrations.sh && chown -R appuser:appgroup /usr/src/app

USER appuser

# Health check and port
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

EXPOSE 8000

# Final CMD with inline wait logic and FastAPI launch
CMD bash -c "\
  echo '[INFO] Waiting for Postgres...' && \
  /usr/local/bin/wait-for-it.sh users-db:5432 --timeout=30 --strict && \
  echo '[INFO] Postgres ready.' && \
  echo '[INFO] Waiting for Redis...' && \
  /usr/local/bin/wait-for-it.sh redis:6379 --timeout=30 --strict && \
  echo '[INFO] Redis ready.' && \
  echo '[INFO] Running migrations...' && \
  ./run_migrations.sh && \
  echo '[INFO] Starting FastAPI...' && \
  uvicorn main:app --host 0.0.0.0 --port 8000 --reload --workers 2"
